package MyServer;


/**
* MyServer/_MyServiceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from C:/Users/Terri-Anne/Desktop/workspace-classic/DTRSCorbaAssignment/simple.idl
* Friday, November 4, 2011 4:25:21 PM PDT
*/

public class _MyServiceStub extends org.omg.CORBA.portable.ObjectImpl implements MyServer.MyService
{

  public int getUDPPort () throws MyServer.MyServicePackage.DTRSException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getUDPPort", true);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:MyServer/MyService/DTRSException:1.0"))
                    throw MyServer.MyServicePackage.DTRSExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getUDPPort (        );
            } finally {
                _releaseReply ($in);
            }
  } // getUDPPort

  public void initializeBoxOffice (String boxOffice) throws MyServer.MyServicePackage.DTRSException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("initializeBoxOffice", true);
                $out.write_string (boxOffice);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:MyServer/MyService/DTRSException:1.0"))
                    throw MyServer.MyServicePackage.DTRSExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                initializeBoxOffice (boxOffice        );
            } finally {
                _releaseReply ($in);
            }
  } // initializeBoxOffice

  public String getBoxOffice ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getBoxOffice", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getBoxOffice (        );
            } finally {
                _releaseReply ($in);
            }
  } // getBoxOffice

  public String printBoxOfficeRecords (int customerID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("printBoxOfficeRecords", true);
                $out.write_ulong (customerID);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return printBoxOfficeRecords (customerID        );
            } finally {
                _releaseReply ($in);
            }
  } // printBoxOfficeRecords

  public void reserve (int customerID, String showID, int numberOfTickets) throws MyServer.MyServicePackage.DTRSException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("reserve", true);
                $out.write_ulong (customerID);
                $out.write_string (showID);
                $out.write_ulong (numberOfTickets);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:MyServer/MyService/DTRSException:1.0"))
                    throw MyServer.MyServicePackage.DTRSExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                reserve (customerID, showID, numberOfTickets        );
            } finally {
                _releaseReply ($in);
            }
  } // reserve

  public void cancel (int customerID, String showID, int numberOfTickets) throws MyServer.MyServicePackage.DTRSException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("cancel", true);
                $out.write_ulong (customerID);
                $out.write_string (showID);
                $out.write_ulong (numberOfTickets);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:MyServer/MyService/DTRSException:1.0"))
                    throw MyServer.MyServicePackage.DTRSExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                cancel (customerID, showID, numberOfTickets        );
            } finally {
                _releaseReply ($in);
            }
  } // cancel

  public int check (String showID)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("check", true);
                $out.write_string (showID);
                $in = _invoke ($out);
                int $result = $in.read_ulong ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return check (showID        );
            } finally {
                _releaseReply ($in);
            }
  } // check

  public void exchange (int customerID, String reservedShowID, int reservedTickets, String desiredShowID, int desiredTickets) throws MyServer.MyServicePackage.DTRSException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("exchange", true);
                $out.write_ulong (customerID);
                $out.write_string (reservedShowID);
                $out.write_ulong (reservedTickets);
                $out.write_string (desiredShowID);
                $out.write_ulong (desiredTickets);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:MyServer/MyService/DTRSException:1.0"))
                    throw MyServer.MyServicePackage.DTRSExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                exchange (customerID, reservedShowID, reservedTickets, desiredShowID, desiredTickets        );
            } finally {
                _releaseReply ($in);
            }
  } // exchange

  public boolean canExchange (int customerID, String showID, int numberOfTickets) throws MyServer.MyServicePackage.DTRSException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("canExchange", true);
                $out.write_ulong (customerID);
                $out.write_string (showID);
                $out.write_ulong (numberOfTickets);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:MyServer/MyService/DTRSException:1.0"))
                    throw MyServer.MyServicePackage.DTRSExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return canExchange (customerID, showID, numberOfTickets        );
            } finally {
                _releaseReply ($in);
            }
  } // canExchange

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:MyServer/MyService:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _MyServiceStub
